#include "shader/util.glsl"

layout(local_size_x = 1) in;

#ifndef AnimPass
layout(binding = 1) buffer IndirectNormalBuffer {
	Indirect indirectsNormal[];
};
layout(binding = 2) buffer IndirectSingleBuffer {
	Indirect indirectsSingle[];
};
layout(binding = 3) buffer IndirectBillBuffer {
	Indirect indirectsBill[];
};
#else
layout(binding = 4) buffer IndirectAnimBuffer {
	Indirect indirectsAnim[];
};
#endif

uniform uvec4 uBases[32];
uniform uvec4 uCount;

void main() {
	uint curIndex = gl_GlobalInvocationID.x;
	uvec4 bases = uBases[curIndex];
#ifndef AnimPass
	if(curIndex + 1 <= uCount.x) {
		indirectsNormal[curIndex].primCount = 0;
		indirectsNormal[curIndex].baseInstance = bases.x;
	}
	if(curIndex + 1 <= uCount.y) {
		indirectsSingle[curIndex].primCount = 0;
		indirectsSingle[curIndex].baseInstance = bases.y;
	}
	if(curIndex + 1 <= uCount.z) {
		indirectsBill[curIndex].primCount = 0;
		indirectsBill[curIndex].baseInstance = bases.z;
	}
#else
	indirectsAnim[curIndex].primCount = 0;
	indirectsAnim[curIndex].baseInstance = bases.w;
#endif
}